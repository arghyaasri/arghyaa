

1. Write a valid SQL statement that calculates the total weight of all corn cobs that were picked from the garden.

mysql> select sum(picked.weight) from picked join plant on picked.plantFK=plant.plantid where plant.name="Corn";
+--------------------+
| sum(picked.weight) |
+--------------------+
| 17.539999961853027 |
+--------------------+
1 row in set (0.01 sec)


2. For some reason Erin has change his location for picking the tomato to North. Write the corresponding query.

mysql> update picked set locationFk = (select locationid from location where name="North") where gardenerFK = (select gardenerid from gardener where name="Erin") and plantFK in (select plantid from plant where name="Tomato");
Query OK, 1 row affected (0.11 sec)
Rows matched: 1  Changed: 1  Warnings: 0


3. insert a new column 'Exper' of type Number (30) to the 'gardener' table which stores Experience of the of person. How will you modify this to varchar2(30).

mysql> alter table gardener add column Exper inT(30);
Query OK, 0 rows affected, 1 warning (1.51 sec)
Records: 0  Duplicates: 0  Warnings: 1

mysql> DESC gardener;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| gardenerid | int         | NO   | PRI | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| age        | int         | YES  |     | NULL    |       |
| Exper      | int         | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.07 sec)

mysql> alter table gardener modify column Exper VARCHAR(30);
Query OK, 4 rows affected (2.27 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> DESC gardener;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| gardenerid | int         | NO   | PRI | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| age        | int         | YES  |     | NULL    |       |
| Exper      | varchar(30) | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)



4. Write a query to find the plant name which required seeds less than 20 which plant on 14-APR

mysql> select name from plant where plantid in (select plantFK from planted where date1="20120414" and seeds <20);
+--------+
| name   |
+--------+
| Carrot |
+--------+
1 row in set (0.00 sec)



5. List the amount of sunlight and water to all plants with names that start with letter 'c' or letter 'r'

mysql> select sunlight,water from plant where name LIKE "c%" OR name LIKE "r%";
+----------+-------+
| sunlight | water |
+----------+-------+
|     0.26 |  0.82 |
|     0.44 |  0.76 |
|     0.28 |  0.84 |
+----------+-------+
3 rows in set (0.00 sec)



6. Write a valid SQL statement that displays the plant name and the total amount of seed required for each plant that were plant in the garden. The output should be in descending order of plant name.

mysql> select name,SUM(seeds) from plant join planted on plant.plantid=planted.plantFK group by name order by name desc;
+---------+------------+
| name    | SUM(seeds) |
+---------+------------+
| Tomato  |         38 |
| Radish  |         30 |
| Lettuce |         30 |
| Corn    |         32 |
| Carrot  |         42 |
| Beet    |         36 |
+---------+------------+
6 rows in set (0.00 sec)



7. Write a valid SQL statement that calculates the average number of items produced per seed planted for each plant type:( (Average Number of Items = Total Amount Picked / Total Seeds Planted.)

mysql> select amount/seeds AS AvgItemsProduced,name from picked p,planted p1,plant p2 where p2.plantid=p.plantFK and p2.plantid=p1.plantFK GROUP BY name;
+------------------+--------+
| AvgItemsProduced | name   |
+------------------+--------+
|           1.0000 | Carrot |
|           2.6000 | Corn   |
|           0.3947 | Tomato |
|           0.7667 | Radish |
+------------------+--------+
4 rows in set (0.00 sec)




8. Write a valid SQL statement that would produce a result set like the following:

mysql> select g.name,p.name,pi.date1,pi.amount from picked pi left outer join plant p on p.plantid=pi.plantfk left outer join location l on l.locationid=pi.locationfk left outer join gardener g on g.gardenerid=pi.gardenerfk where l.name='East' and g.name='Tim';
+------+--------+------------+--------+
| name | name   | date1      | amount |
+------+--------+------------+--------+
| Tim  | Carrot | 2012-08-18 |     28 |
| Tim  | Radish | 2012-07-16 |     23 |
+------+--------+------------+--------+
2 rows in set (0.00 sec)




9. Find out persons who picked from the same location as he/she planted.

mysql> select name from gardener where gardenerid in (select gardenerFK from planted where gardenerFK in (select gardenerFK from picked));
+--------+
| name   |
+--------+
| Father |
| Tim    |
| Erin   |
+--------+
3 rows in set (0.00 sec)



10. Create a view that lists all the plant names picked from all locations except ’West’ in the month of August.

mysql> select * from Plants_Picked;
+--------+
| name   |
+--------+
| Radish |
+--------+
1 row in set (0.00 sec)